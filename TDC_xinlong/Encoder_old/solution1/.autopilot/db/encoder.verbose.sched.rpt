

================================================================
== Vitis HLS Report for 'encoder'
================================================================
* Date:           Wed Apr 24 15:39:54 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        Encoder
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  33.00 ns|  6.314 ns|     8.91 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.31>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%delay_chain_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %delay_chain"   --->   Operation 2 'read' 'delay_chain_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%coarse_counter_read = read i12 @_ssdm_op_Read.ap_auto.i12, i12 %coarse_counter"   --->   Operation 3 'read' 'coarse_counter_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 4 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [Encoder/source/encoder.cpp:3]   --->   Operation 5 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i12 %coarse_counter"   --->   Operation 6 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i12 %coarse_counter, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 7 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i9 %delay_chain"   --->   Operation 8 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i9 %delay_chain, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%trunc_ln28 = trunc i9 %delay_chain_read" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 10 'trunc' 'trunc_ln28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i1 %trunc_ln28" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 11 'zext' 'zext_ln28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %delay_chain_read, i32 1" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 12 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i1 %tmp" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 13 'zext' 'zext_ln28_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %delay_chain_read, i32 2" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 14 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i1 %tmp_1" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 15 'zext' 'zext_ln28_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %delay_chain_read, i32 3" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 16 'bitselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln28_3 = zext i1 %tmp_2" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 17 'zext' 'zext_ln28_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %delay_chain_read, i32 4" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 18 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln28_4 = zext i1 %tmp_3" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 19 'zext' 'zext_ln28_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %delay_chain_read, i32 5" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 20 'bitselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln28_5 = zext i1 %tmp_4" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 21 'zext' 'zext_ln28_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %delay_chain_read, i32 6" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 22 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln28_6 = zext i1 %tmp_5" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 23 'zext' 'zext_ln28_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %delay_chain_read, i32 7" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 24 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln28_7 = zext i1 %tmp_6" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 25 'zext' 'zext_ln28_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_7 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %delay_chain_read, i32 8" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 26 'bitselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln28_14 = zext i1 %tmp_7" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 27 'zext' 'zext_ln28_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.58ns)   --->   "%add_ln28 = add i2 %zext_ln28_4, i2 %zext_ln28_5" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 28 'add' 'add_ln28' <Predicate = true> <Delay = 1.58> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln28_8 = zext i2 %add_ln28" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 29 'zext' 'zext_ln28_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.58ns)   --->   "%add_ln28_1 = add i2 %zext_ln28_3, i2 %zext_ln28_2" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 30 'add' 'add_ln28_1' <Predicate = true> <Delay = 1.58> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln28_9 = zext i2 %add_ln28_1" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 31 'zext' 'zext_ln28_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (1.58ns)   --->   "%add_ln28_8 = add i2 %add_ln28_1, i2 %add_ln28" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 32 'add' 'add_ln28_8' <Predicate = true> <Delay = 1.58> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (1.58ns)   --->   "%add_ln28_2 = add i3 %zext_ln28_9, i3 %zext_ln28_8" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 33 'add' 'add_ln28_2' <Predicate = true> <Delay = 1.58> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node xor_ln20)   --->   "%trunc_ln28_1 = trunc i2 %add_ln28_8" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 34 'trunc' 'trunc_ln28_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln28_10 = zext i3 %add_ln28_2" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 35 'zext' 'zext_ln28_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (1.58ns)   --->   "%add_ln28_3 = add i2 %zext_ln28_14, i2 %zext_ln28_1" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 36 'add' 'add_ln28_3' <Predicate = true> <Delay = 1.58> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln28_11 = zext i2 %add_ln28_3" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 37 'zext' 'zext_ln28_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (1.58ns)   --->   "%add_ln28_4 = add i2 %zext_ln28, i2 %zext_ln28_6" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 38 'add' 'add_ln28_4' <Predicate = true> <Delay = 1.58> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln28_12 = zext i2 %add_ln28_4" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 39 'zext' 'zext_ln28_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (1.58ns)   --->   "%add_ln28_9 = add i2 %add_ln28_4, i2 %add_ln28_3" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 40 'add' 'add_ln28_9' <Predicate = true> <Delay = 1.58> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (1.58ns)   --->   "%add_ln28_5 = add i3 %zext_ln28_12, i3 %zext_ln28_11" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 41 'add' 'add_ln28_5' <Predicate = true> <Delay = 1.58> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node xor_ln20)   --->   "%trunc_ln28_2 = trunc i2 %add_ln28_9" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 42 'trunc' 'trunc_ln28_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln28_13 = zext i3 %add_ln28_5" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 43 'zext' 'zext_ln28_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node xor_ln20)   --->   "%xor_ln28 = xor i1 %trunc_ln28_2, i1 %trunc_ln28_1" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 44 'xor' 'xor_ln28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln28_6 = add i4 %zext_ln28_13, i4 %zext_ln28_10" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 45 'add' 'add_ln28_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.57> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 46 [1/1] (3.14ns) (root node of TernaryAdder)   --->   "%fine_counter = add i4 %add_ln28_6, i4 %zext_ln28_7" [Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8]   --->   Operation 46 'add' 'fine_counter' <Predicate = true> <Delay = 3.14> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.57> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 47 [1/1] (0.97ns) (out node of the LUT)   --->   "%xor_ln20 = xor i1 %xor_ln28, i1 %tmp_6" [Encoder/source/encoder.cpp:20->Encoder/source/encoder.cpp:9]   --->   Operation 47 'xor' 'xor_ln20' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %fine_counter, i32 1, i32 3" [Encoder/source/encoder.cpp:20->Encoder/source/encoder.cpp:9]   --->   Operation 48 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%out = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i12.i3.i1, i1 0, i12 %coarse_counter_read, i3 %tmp_8, i1 %xor_ln20" [Encoder/source/encoder.cpp:20->Encoder/source/encoder.cpp:9]   --->   Operation 49 'bitconcatenate' 'out' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i17 %out" [Encoder/source/encoder.cpp:13->Encoder/source/encoder.cpp:9]   --->   Operation 50 'zext' 'zext_ln13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%ret_ln9 = ret i32 %zext_ln13" [Encoder/source/encoder.cpp:9]   --->   Operation 51 'ret' 'ret_ln9' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 33.000ns, clock uncertainty: 8.910ns.

 <State 1>: 6.314ns
The critical path consists of the following:
	wire read operation ('delay_chain') on port 'delay_chain' [3]  (0.000 ns)
	'add' operation 2 bit ('add_ln28', Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8) [29]  (1.584 ns)
	'add' operation 3 bit ('add_ln28_2', Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8) [34]  (1.584 ns)
	'add' operation 4 bit ('add_ln28_6', Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8) [46]  (0.000 ns)
	'add' operation 4 bit ('fine_counter', Encoder/source/encoder.cpp:28->Encoder/source/encoder.cpp:8) [47]  (3.146 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
