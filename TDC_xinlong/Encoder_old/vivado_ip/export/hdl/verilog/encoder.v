// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="encoder_encoder,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=33.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.314000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=100,HLS_VERSION=2023_2}" *)

module encoder (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        coarse_counter,
        delay_chain,
        ap_return
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [11:0] coarse_counter;
input  [8:0] delay_chain;
output  [31:0] ap_return;

wire   [0:0] trunc_ln28_fu_60_p1;
wire   [0:0] tmp_fu_68_p3;
wire   [0:0] tmp_1_fu_80_p3;
wire   [0:0] tmp_2_fu_92_p3;
wire   [0:0] tmp_3_fu_104_p3;
wire   [0:0] tmp_4_fu_116_p3;
wire   [0:0] tmp_5_fu_128_p3;
wire   [0:0] tmp_6_fu_140_p3;
wire   [0:0] tmp_7_fu_152_p3;
wire   [1:0] zext_ln28_4_fu_112_p1;
wire   [1:0] zext_ln28_5_fu_124_p1;
wire   [1:0] add_ln28_fu_164_p2;
wire   [1:0] zext_ln28_3_fu_100_p1;
wire   [1:0] zext_ln28_2_fu_88_p1;
wire   [1:0] add_ln28_1_fu_174_p2;
wire   [2:0] zext_ln28_9_fu_180_p1;
wire   [2:0] zext_ln28_8_fu_170_p1;
wire   [1:0] add_ln28_8_fu_184_p2;
wire   [2:0] add_ln28_2_fu_190_p2;
wire   [1:0] zext_ln28_14_fu_160_p1;
wire   [1:0] zext_ln28_1_fu_76_p1;
wire   [1:0] add_ln28_3_fu_204_p2;
wire   [1:0] zext_ln28_fu_64_p1;
wire   [1:0] zext_ln28_6_fu_136_p1;
wire   [1:0] add_ln28_4_fu_214_p2;
wire   [2:0] zext_ln28_12_fu_220_p1;
wire   [2:0] zext_ln28_11_fu_210_p1;
wire   [1:0] add_ln28_9_fu_224_p2;
wire   [2:0] add_ln28_5_fu_230_p2;
wire   [0:0] trunc_ln28_2_fu_236_p1;
wire   [0:0] trunc_ln28_1_fu_196_p1;
wire   [3:0] zext_ln28_13_fu_240_p1;
wire   [3:0] zext_ln28_10_fu_200_p1;
wire   [3:0] add_ln28_6_fu_250_p2;
wire   [3:0] zext_ln28_7_fu_148_p1;
wire   [0:0] xor_ln28_fu_244_p2;
wire   [3:0] fine_counter_fu_256_p2;
wire   [2:0] tmp_8_fu_268_p4;
wire   [0:0] xor_ln20_fu_262_p2;
wire   [16:0] out_fu_278_p5;
wire    ap_ce_reg;

assign add_ln28_1_fu_174_p2 = (zext_ln28_3_fu_100_p1 + zext_ln28_2_fu_88_p1);

assign add_ln28_2_fu_190_p2 = (zext_ln28_9_fu_180_p1 + zext_ln28_8_fu_170_p1);

assign add_ln28_3_fu_204_p2 = (zext_ln28_14_fu_160_p1 + zext_ln28_1_fu_76_p1);

assign add_ln28_4_fu_214_p2 = (zext_ln28_fu_64_p1 + zext_ln28_6_fu_136_p1);

assign add_ln28_5_fu_230_p2 = (zext_ln28_12_fu_220_p1 + zext_ln28_11_fu_210_p1);

assign add_ln28_6_fu_250_p2 = (zext_ln28_13_fu_240_p1 + zext_ln28_10_fu_200_p1);

assign add_ln28_8_fu_184_p2 = (add_ln28_1_fu_174_p2 + add_ln28_fu_164_p2);

assign add_ln28_9_fu_224_p2 = (add_ln28_4_fu_214_p2 + add_ln28_3_fu_204_p2);

assign add_ln28_fu_164_p2 = (zext_ln28_4_fu_112_p1 + zext_ln28_5_fu_124_p1);

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign ap_return = out_fu_278_p5;

assign fine_counter_fu_256_p2 = (add_ln28_6_fu_250_p2 + zext_ln28_7_fu_148_p1);

assign out_fu_278_p5 = {{{{{{1'd0}, {coarse_counter}}}, {tmp_8_fu_268_p4}}}, {xor_ln20_fu_262_p2}};

assign tmp_1_fu_80_p3 = delay_chain[32'd2];

assign tmp_2_fu_92_p3 = delay_chain[32'd3];

assign tmp_3_fu_104_p3 = delay_chain[32'd4];

assign tmp_4_fu_116_p3 = delay_chain[32'd5];

assign tmp_5_fu_128_p3 = delay_chain[32'd6];

assign tmp_6_fu_140_p3 = delay_chain[32'd7];

assign tmp_7_fu_152_p3 = delay_chain[32'd8];

assign tmp_8_fu_268_p4 = {{fine_counter_fu_256_p2[3:1]}};

assign tmp_fu_68_p3 = delay_chain[32'd1];

assign trunc_ln28_1_fu_196_p1 = add_ln28_8_fu_184_p2[0:0];

assign trunc_ln28_2_fu_236_p1 = add_ln28_9_fu_224_p2[0:0];

assign trunc_ln28_fu_60_p1 = delay_chain[0:0];

assign xor_ln20_fu_262_p2 = (xor_ln28_fu_244_p2 ^ tmp_6_fu_140_p3);

assign xor_ln28_fu_244_p2 = (trunc_ln28_2_fu_236_p1 ^ trunc_ln28_1_fu_196_p1);

assign zext_ln28_10_fu_200_p1 = add_ln28_2_fu_190_p2;

assign zext_ln28_11_fu_210_p1 = add_ln28_3_fu_204_p2;

assign zext_ln28_12_fu_220_p1 = add_ln28_4_fu_214_p2;

assign zext_ln28_13_fu_240_p1 = add_ln28_5_fu_230_p2;

assign zext_ln28_14_fu_160_p1 = tmp_7_fu_152_p3;

assign zext_ln28_1_fu_76_p1 = tmp_fu_68_p3;

assign zext_ln28_2_fu_88_p1 = tmp_1_fu_80_p3;

assign zext_ln28_3_fu_100_p1 = tmp_2_fu_92_p3;

assign zext_ln28_4_fu_112_p1 = tmp_3_fu_104_p3;

assign zext_ln28_5_fu_124_p1 = tmp_4_fu_116_p3;

assign zext_ln28_6_fu_136_p1 = tmp_5_fu_128_p3;

assign zext_ln28_7_fu_148_p1 = tmp_6_fu_140_p3;

assign zext_ln28_8_fu_170_p1 = add_ln28_fu_164_p2;

assign zext_ln28_9_fu_180_p1 = add_ln28_1_fu_174_p2;

assign zext_ln28_fu_64_p1 = trunc_ln28_fu_60_p1;

endmodule //encoder
